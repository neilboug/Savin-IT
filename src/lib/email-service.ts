/**
 * Module Description:
 *
 * Provides functionality for sending different types of emails (verification, password reset, 2FA)
 * using the Resend email service. It includes utilities for generating HTML email content
 * and methods for sending specific email types based on predefined templates.
 */

import { Resend } from "resend";

// Initialises Resend service with API key from environment variables.
const emailClient = new Resend(process.env.RESEND_API_KEY);

// Domain for email links.
const domain = process.env.NEXT_PUBLIC_URL;

/**
 * Sends an email with the provided content.
 */
async function sendEmail(email: string, subject: string, htmlContent: string) {
  await emailClient.emails.send({
    from: "no-reply@savin-it.co.uk",
    to: email,
    subject,
    html: htmlContent,
  });
}

/**
 * Generates HTML content for emails based on template parameters.
 *
 * Email template generated by GitHub Copilot then further altered to fit project's needs.
 */
function generateEmailHtml(templateParams: {
  header: string;
  body: string;
  linkText?: string;
  linkHref?: string;
  footer: string;
}): string {
  const { header, body, linkText, linkHref, footer } = templateParams;
  const linkHtml =
    linkText && linkHref ? `<p><a href="${linkHref}">${linkText}</a></p>` : "";
  return `
    <!DOCTYPE html>
    <html>
        <head>
            <style>
                body { font-family: Arial, sans-serif; margin: 20px; }
                .container { background-color: #f0f0f0; padding: 20px; }
                .header { color: #333; }
                .footer { margin-top: 20px; font-size: 0.9em; color: #666; }
                a { color: #1a0dab; }
            </style>
        </head>
        <body>
            <div class="container">
                <h2 class="header">${header}</h2>
                ${body}
                ${linkHtml}
                <div class="footer">
                    ${footer}
                </div>
            </div>
        </body>
    </html>
    `;
}

/**
 * Sends verification email with a link for the user to verify their registration email.
 */
export async function sendVerificationEmail(email: string, token: string) {
  const confirmLink = `${domain}/new-verification?token=${token}`;
  const htmlContent = generateEmailHtml({
    header: "Welcome to Savin'IT!",
    body: "Thank you for signing up. Please confirm your email address.",
    linkText: "Verify Email Address",
    linkHref: confirmLink,
    footer: "If you did not sign up, please disregard this email.",
  });
  await sendEmail(email, "Verify Your Savin'IT Email Address", htmlContent);
}

/**
 * Sends password reset email with a link for the user to reset their password.
 */
export async function sendPasswordResetEmail(email: string, token: string) {
  const resetLink = `${domain}/new-password?token=${token}`;
  const htmlContent = generateEmailHtml({
    header: "Password Reset Request",
    body: "You requested to reset your password. Click below:",
    linkText: "Reset your password",
    linkHref: resetLink,
    footer: "If you did not request this, please ignore this email.",
  });
  await sendEmail(email, "Savin'IT Password Reset Request", htmlContent);
}

/**
 * Sends Two-Factor Authentication (2FA) code via email as part of the 2FA process.
 */
export async function sendTwoFactorAuthenticationEmail(
  email: string,
  token: string
) {
  const htmlContent = generateEmailHtml({
    header: "Your Savin'IT 2FA Code",
    body: `Your 2FA code is: <strong>${token}</strong>. Please enter this to log in.`,
    footer: "If you didn't request this, please contact support immediately.",
  });
  await sendEmail(email, "Your Savin'IT 2FA Code", htmlContent);
}

/**
 * Documentation generated with GitHub Copilot.
 */
